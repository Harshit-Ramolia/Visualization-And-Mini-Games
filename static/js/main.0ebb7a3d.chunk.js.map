{"version":3,"sources":["2048/functions/myColor.js","2048/Board.js","2048/functions/addNumber.js","2048/functions/isEquale.js","2048/functions/move.js","2048/functions/checkGameOver.js","2048/index.js","binarySearch/functions/generateArray.js","binarySearch/DisplayArray.js","binarySearch/functions/binarySearch.js","binarySearch/functions/linearSearch.js","binarySearch/functions/visualize.js","binarySearch/index.js","home/index.js","mergesort/DisplayArray.js","mergesort/functions/generateArray.js","mergesort/functions/mergeSort.js","mergesort/functions/visualize.js","mergesort/index.js","sudoku/functions/solveSudoku.js","sudoku/functions/visualize.js","sudoku/SudokuBox.js","sudoku/index.js","towerOfHanoi/functions/solveTower.js","towerOfHanoi/functions/visualize.js","towerOfHanoi/TowerBoard.js","towerOfHanoi/index.js","App.js","index.js"],"names":["myColor","a","useStyles","makeStyles","theme","box","height","width","position","background","piece","display","justifyContent","alignItems","margin","color","fontSize","Board","grid","classes","Fragment","Box","align","Paper","className","map","x","y","style","top","left","elevation","addNumber","setGrid","Math","floor","random","prevGrid","newArray","arr","slice","isEqual","newGrid","i","j","leftMove","setScore","used","Array","fill","score","filter","number","length","push","undefined","prev","rightMove","row","reverse","rotateRight","rotateLeft","downMove","upMove","checkGameOver","Game2048","useState","addNumberSignal","setAddNumberSignal","gameOver","setGameOver","useEffect","keyPressed","e","key","document","addEventListener","removeEventListener","p","Container","maxWidth","Typography","variant","to","Button","generateArray","setBinarySearch","setLinearSearch","setNumber","temp","indexOf","sort","b","border","DisplayArray","didWin","isEnded","item","idx","binarySearch","setDidWin","low","high","mid","LinearSearch","progressValueBinarySearch","progressValueLinearSearch","setColorBinary","setColorLinear","setIsBinaryEnded","setIsLinearEnded","setInProgress","maxSteps","max","Promise","resolve","setTimeout","visualize","BinarySearch","linearSearch","colorBinary","colorLinear","inProgress","isBinaryEnded","isLinearEnded","regenerate","setRegenerate","onClick","disabled","binarySearchFunction","linearSearchFunction","Home","padding","href","target","rel","Grid","container","spacing","xs","sm","Card","CardActionArea","src","alt","CardContent","gutterBottom","component","isColor","setArray","processes","_mergeSort","right","k","merge","mergeSort","setIsColor","value","colors","MergeSort","array","isSafe","col","num","sudokuValue","tryAllPossibility","solveSudoku","setSudokuValue","setProgressValue","counter","paper","paper2","Display","SudokuBox","outerX","justify","outerY","innerX","innerY","Sudoku","progressValue","fetch","then","response","json","data","board","LinearProgress","last","towerOfHanoi","n","from_rod","to_rod","aux_rod","solveTower","from","_","setDiskState","rod","marginLeft","marginRight","disk","TowerBoard","noOfDisk","diskState","bottom","formControl","minWidth","TowerOfHanoi","React","setNoOfDisk","FormControl","InputLabel","id","Select","labelId","onChange","event","MenuItem","App","fallback","CircularProgress","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ebb7a3d.chunk.js","sourcesContent":["function myColor(a) {\r\n  if (a === 2) {\r\n    return \"#E8554E\";\r\n  }\r\n  if (a === 4) {\r\n    return \"#F19C65\";\r\n  }\r\n  if (a === 8) {\r\n    return \"#FFD265\";\r\n  }\r\n  if (a === 16) {\r\n    return \"#2AA876\";\r\n  }\r\n  if (a === 32) {\r\n    return \"#0A7B83\";\r\n  }\r\n  if (a === 64) {\r\n    return \"#8916E5\";\r\n  }\r\n  if (a === 128) {\r\n    return \"#FF4401\";\r\n  }\r\n  return \"#FEBFCA\";\r\n}\r\n\r\nexport default myColor;\r\n","import { Box, makeStyles, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport myColor from \"./functions/myColor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    height: 400,\r\n    width: 400,\r\n    \"@media (max-width: 720px)\": {\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n    position: \"relative\",\r\n    background: \"whitesmoke\",\r\n  },\r\n  piece: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: \"10px\",\r\n    height: 80,\r\n    width: 80,\r\n    background: \"teal\",\r\n    color: \"white\",\r\n    fontSize: \"40px\",\r\n  },\r\n}));\r\n\r\nexport default function Board({ grid }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Box align=\"center\">\r\n        <Paper className={classes.box}>\r\n          {[0, 1, 2, 3].map((x) => (\r\n            <React.Fragment>\r\n              {[0, 1, 2, 3].map((y) => (\r\n                <React.Fragment>\r\n                  {grid[x][y] !== 0 ? (\r\n                    <Paper\r\n                      className={classes.piece}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 100 * x,\r\n                        left: 100 * y,\r\n                        background: myColor(grid[x][y]),\r\n                      }}\r\n                    >\r\n                      {grid[x][y]}\r\n                    </Paper>\r\n                  ) : (\r\n                    <Paper\r\n                      className={classes.piece}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 100 * x,\r\n                        left: 100 * y,\r\n                        background: \"rgba(50,50,50,0.1)\",\r\n                      }}\r\n                      elevation={0}\r\n                    ></Paper>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </React.Fragment>\r\n          ))}\r\n        </Paper>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","function addNumber({ grid, setGrid }) {\r\n  while (true) {\r\n    const x = Math.floor(Math.random() * 4);\r\n    const y = Math.floor(Math.random() * 4);\r\n    if (grid[x][y] !== 0) continue;\r\n    setGrid((prevGrid) => {\r\n      let newArray = [\r\n        ...prevGrid.map(function (arr) {\r\n          return arr.slice();\r\n        }),\r\n      ];\r\n      newArray[x][y] = 2;\r\n      return newArray;\r\n    });\r\n    break;\r\n  }\r\n}\r\n\r\nexport default addNumber;\r\n","function isEqual({ grid, newGrid }) {\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] !== newGrid[i][j]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default isEqual;\r\n","function leftMove({ grid, setScore }) {\r\n  let newGrid = [\r\n    ...grid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n  let used = [\r\n    ...Array(4)\r\n      .fill(0)\r\n      .map(() => new Array(4).fill(0)),\r\n  ];\r\n  let score = 0;\r\n  for (let i = 0; i < 4; i++) {\r\n    newGrid[i] = [...newGrid[i].filter((number) => number !== 0)];\r\n    for (let j = newGrid[i].length; j < 4; j++) {\r\n      newGrid[i].push(0);\r\n    }\r\n    for (let j = 0; j < 4; j++) {\r\n      if (\r\n        j > 0 &&\r\n        newGrid[i][j] === newGrid[i][j - 1] &&\r\n        newGrid[i][j - 1] !== 0 &&\r\n        used[i][j - 1] !== 1\r\n      ) {\r\n        newGrid[i][j - 1] = 2 * newGrid[i][j - 1];\r\n        score = score + newGrid[i][j - 1];\r\n\r\n        newGrid[i][j] = 0;\r\n        used[i][j - 1] = 1;\r\n        used[i][j] = 1;\r\n      }\r\n    }\r\n    newGrid[i] = [...newGrid[i].filter((number) => number !== 0)];\r\n    for (let j = newGrid[i].length; j < 4; j++) {\r\n      newGrid[i].push(0);\r\n    }\r\n  }\r\n  if (setScore !== undefined) {\r\n    setScore((prev) => prev + score);\r\n  }\r\n  return [\r\n    ...newGrid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n}\r\n\r\nfunction rightMove({ grid, setScore }) {\r\n  let newGrid = [\r\n    ...grid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n  newGrid.map((row) => row.reverse());\r\n  newGrid = leftMove({ grid: newGrid, setScore });\r\n  newGrid.map((row) => row.reverse());\r\n  return [\r\n    ...newGrid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n}\r\n\r\nfunction rotateRight({ grid, setScore }) {\r\n  let newGrid = [\r\n    ...Array(4)\r\n      .fill(0)\r\n      .map(() => new Array(4).fill(0)),\r\n  ];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      newGrid[i][j] = grid[j][grid[i].length - 1 - i];\r\n    }\r\n  }\r\n  return [\r\n    ...newGrid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n}\r\n\r\nfunction rotateLeft({ grid, setScore }) {\r\n  let newGrid = [\r\n    ...Array(4)\r\n      .fill(0)\r\n      .map(() => new Array(4).fill(0)),\r\n  ];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      newGrid[i][j] = grid[grid[i].length - 1 - j][i];\r\n    }\r\n  }\r\n  return [\r\n    ...newGrid.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n}\r\n\r\nfunction downMove({ grid, setScore }) {\r\n  let newGrid = rotateLeft({ grid });\r\n  newGrid = leftMove({ grid: newGrid, setScore });\r\n  return rotateRight({ grid: newGrid });\r\n}\r\n\r\nfunction upMove({ grid, setScore }) {\r\n  let newGrid = rotateRight({ grid });\r\n  newGrid = leftMove({ grid: newGrid, setScore });\r\n  return rotateLeft({ grid: newGrid });\r\n}\r\n\r\nexport { leftMove, rightMove, upMove, downMove };\r\n","import isEqual from \"./isEquale\";\r\nimport { downMove, leftMove, rightMove, upMove } from \"./move\";\r\n\r\nfunction checkGameOver({ grid }) {\r\n  let allFilled = 1;\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (grid[i][j] === 2048) {\r\n        return 2;\r\n      }\r\n    }\r\n  }\r\n  return isEqual({ newGrid: leftMove({ grid }), grid }) &&\r\n    isEqual({ newGrid: downMove({ grid }), grid }) &&\r\n    isEqual({ newGrid: upMove({ grid }), grid }) &&\r\n    isEqual({ newGrid: rightMove({ grid }), grid })\r\n    ? 1\r\n    : 0;\r\n}\r\n\r\nexport default checkGameOver;\r\n","import { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Board from \"./Board\";\r\nimport addNumber from \"./functions/addNumber\";\r\nimport checkGameOver from \"./functions/checkGameOver\";\r\nimport isEqual from \"./functions/isEquale\";\r\nimport { downMove, leftMove, rightMove, upMove } from \"./functions/move\";\r\n\r\nexport default function Game2048() {\r\n  const [grid, setGrid] = useState(\r\n    new Array(4).fill(0).map(() => new Array(4).fill(0))\r\n  );\r\n  const [addNumberSignal, setAddNumberSignal] = useState(true);\r\n  const [gameOver, setGameOver] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  useEffect(() => {\r\n    addNumber({ grid, setGrid });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addNumber({ grid, setGrid });\r\n  }, [addNumberSignal]);\r\n\r\n  const keyPressed = (e) => {\r\n    let newGrid;\r\n    if (!gameOver) {\r\n      switch (e.key) {\r\n        case \"ArrowLeft\":\r\n          newGrid = leftMove({ grid, setScore });\r\n          if (!isEqual({ grid, newGrid })) {\r\n            setGrid(newGrid);\r\n            setAddNumberSignal((prev) => !prev);\r\n          }\r\n          break;\r\n        case \"ArrowUp\":\r\n          newGrid = upMove({ grid, setScore });\r\n          if (!isEqual({ grid, newGrid })) {\r\n            setGrid(newGrid);\r\n            setAddNumberSignal((prev) => !prev);\r\n          }\r\n          break;\r\n        case \"ArrowRight\":\r\n          newGrid = rightMove({ grid, setScore });\r\n          if (!isEqual({ grid, newGrid })) {\r\n            setGrid(newGrid);\r\n            setAddNumberSignal((prev) => !prev);\r\n          }\r\n          break;\r\n        case \"ArrowDown\":\r\n          newGrid = downMove({ grid, setScore });\r\n          if (!isEqual({ grid, newGrid })) {\r\n            setGrid(newGrid);\r\n            setAddNumberSignal((prev) => !prev);\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      setGameOver(checkGameOver({ grid }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyPressed);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", keyPressed);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={5} align=\"center\">\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h4\">2048</Typography>\r\n          <Box p={2} />\r\n          <Typography variant=\"h5\">{`Score = ${score}`}</Typography>\r\n          <Typography variant=\"h5\">\r\n            {gameOver === 1 ? \"You lost\" : gameOver === 1 ? \"You Won\" : \"\"}\r\n          </Typography>\r\n          <Box p={2} />\r\n          <Board grid={grid} />\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" style={{ margin: \"10px\" }}>\r\n              {`<= Home`}\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","function generateArray(setBinarySearch, setLinearSearch, setNumber) {\r\n  let arr = [];\r\n  setNumber(Math.floor(Math.random() * 100) + 1);\r\n  while (arr.length < 15) {\r\n    const temp = Math.floor(Math.random() * 100) + 1;\r\n    if (arr.indexOf(temp) === -1) arr.push(temp);\r\n  }\r\n  arr.sort((a, b) => a > b);\r\n  setBinarySearch([...arr]);\r\n  setLinearSearch([...arr]);\r\n}\r\n\r\nexport default generateArray;\r\n","import { Box, makeStyles, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    border: \"1px solid black\",\r\n    display: \"inline-block\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayArray({ arr, color, didWin, isEnded }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      {arr.map((item, idx) => {\r\n        return (\r\n          <Paper\r\n            className={classes.box}\r\n            style={{\r\n              background:\r\n                color === idx\r\n                  ? didWin && isEnded\r\n                    ? \"lightGreen\"\r\n                    : \"antiquewhite\"\r\n                  : \"\",\r\n            }}\r\n          >\r\n            {item}\r\n          </Paper>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","function binarySearch(arr, number, setDidWin) {\r\n  let low = 0,\r\n    high = arr.length - 1;\r\n  let temp = [];\r\n  while (low <= high) {\r\n    const mid = Math.floor((low + high) / 2);\r\n    temp.push(mid);\r\n    if (arr[mid] === number) {\r\n      setDidWin(true);\r\n      break;\r\n    }\r\n    if (arr[mid] < number) {\r\n      low = mid + 1;\r\n    } else {\r\n      high = mid - 1;\r\n    }\r\n  }\r\n  return [...temp];\r\n}\r\n\r\nexport default binarySearch;\r\n","function LinearSearch(arr, number) {\r\n  let temp = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    temp.push(i);\r\n    if (arr[i] >= number) {\r\n      break;\r\n    }\r\n  }\r\n  return [...temp];\r\n}\r\n\r\nexport default LinearSearch;\r\n","async function visualize({\r\n  progressValueBinarySearch,\r\n  progressValueLinearSearch,\r\n  setColorBinary,\r\n  setColorLinear,\r\n  setIsBinaryEnded,\r\n  setIsLinearEnded,\r\n  setInProgress,\r\n}) {\r\n  setInProgress(true);\r\n  setIsBinaryEnded(false);\r\n  setIsLinearEnded(false);\r\n  const maxSteps =\r\n    Math.max(\r\n      progressValueBinarySearch.length,\r\n      progressValueLinearSearch.length\r\n    ) - 1;\r\n  for (let i = 0; i < maxSteps + 1; i++) {\r\n    if (i > progressValueBinarySearch.length - 1) {\r\n\r\n      setIsBinaryEnded(true);\r\n    } else {\r\n      setColorBinary(progressValueBinarySearch[i]);\r\n    }\r\n    if (i > progressValueLinearSearch.length - 1) {\r\n      setIsLinearEnded(true);\r\n    } else {\r\n      setColorLinear(progressValueLinearSearch[i]);\r\n    }\r\n    await new Promise((resolve) => setTimeout(resolve, 300));\r\n  }\r\n  setIsBinaryEnded(true);\r\n  setIsLinearEnded(true);\r\n  setInProgress(false);\r\n}\r\n\r\nexport default visualize;\r\n","import { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport generateArray from \"./functions/generateArray\";\r\nimport DisplayArray from \"./DisplayArray\";\r\nimport binarySearchFunction from \"./functions/binarySearch\";\r\nimport linearSearchFunction from \"./functions/linearSearch\";\r\nimport visualize from \"./functions/visualize\";\r\n\r\nexport default function BinarySearch() {\r\n  // const [arr, setArr] = useState([]);\r\n  const [binarySearch, setBinarySearch] = useState([]);\r\n  const [linearSearch, setLinearSearch] = useState([]);\r\n  const [colorBinary, setColorBinary] = useState(null);\r\n  const [colorLinear, setColorLinear] = useState(null);\r\n  const [inProgress, setInProgress] = useState(false);\r\n  const [isBinaryEnded, setIsBinaryEnded] = useState(false);\r\n  const [isLinearEnded, setIsLinearEnded] = useState(false);\r\n  const [didWin, setDidWin] = useState(false);\r\n  const [number, setNumber] = useState(1);\r\n  const [regenerate, setRegenerate] = useState(false);\r\n  useEffect(() => {\r\n    generateArray(setBinarySearch, setLinearSearch, setNumber);\r\n    setColorBinary(null);\r\n    setColorLinear(null);\r\n    setIsBinaryEnded(false);\r\n    setIsLinearEnded(false);\r\n    setDidWin(false);\r\n  }, [regenerate]);\r\n  const handleVisualize = () => {\r\n    let progressValueBinarySearch = binarySearchFunction(\r\n      binarySearch,\r\n      number,\r\n      setDidWin\r\n    );\r\n    let progressValueLinearSearch = linearSearchFunction(linearSearch, number);\r\n    visualize({\r\n      progressValueBinarySearch,\r\n      progressValueLinearSearch,\r\n      setColorBinary,\r\n      setColorLinear,\r\n      setIsBinaryEnded,\r\n      setIsLinearEnded,\r\n      setInProgress\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={5} align=\"center\">\r\n        <Container maxWidth=\"lg\">\r\n          <Typography variant=\"h4\">Binary Search Vs. Linear Search</Typography>\r\n          <Box p={2} />\r\n          <Typography variant=\"h6\">Searching for {number}</Typography>\r\n          <Box p={2} />\r\n          <Typography variant=\"h6\">Binary Search</Typography>\r\n          <DisplayArray\r\n            arr={binarySearch}\r\n            color={colorBinary}\r\n            didWin={didWin}\r\n            isEnded={isBinaryEnded}\r\n          />\r\n          <Typography variant=\"h6\">Linear Search</Typography>\r\n          <DisplayArray\r\n            arr={linearSearch}\r\n            color={colorLinear}\r\n            didWin={didWin}\r\n            isEnded={isLinearEnded}\r\n          />\r\n          <Typography>\r\n            {\" \"}\r\n            {isBinaryEnded || isLinearEnded\r\n              ? didWin\r\n                ? \"Found The Number\"\r\n                : \"Number is not present in Array\"\r\n              : \"\"}{\" \"}\r\n          </Typography>\r\n          <Box p={2} />\r\n          <Button\r\n            onClick={() => setRegenerate((prev) => !prev)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n            disabled={inProgress}\r\n          >\r\n            Regenerate\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ margin: \"10px\" }}\r\n            onClick={handleVisualize}\r\n            disabled={inProgress}\r\n          >\r\n            Visualize\r\n          </Button>\r\n\r\n          <Box />\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" style={{ margin: \"10px\" }}>\r\n              {`<= Home`}\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\" style={{ padding: \"20px 0\" }}>\r\n        <Typography variant=\"h3\" align=\"center\">\r\n          Algorithm Visualizations and Mini Games\r\n        </Typography>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/harshit-ramolia/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Typography\r\n            align=\"center\"\r\n            variant=\"body1\"\r\n            style={{ fontSize: \"20px\" }}\r\n          >\r\n            -Harshit Ramolia\r\n          </Typography>\r\n        </a>\r\n        <Box p={2} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Card>\r\n              <Link to=\"/sudoku\">\r\n                <CardActionArea>\r\n                  <img\r\n                    src=\"sudoku.png\"\r\n                    alt=\"sudoku\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      Sudoku Solution Visualizer\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Card>\r\n              <Link to=\"/binarysearch\">\r\n                <CardActionArea>\r\n                  <img\r\n                    src=\"binarysearch.png\"\r\n                    alt=\"Binary Search\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      Binary Search Vs. Linear Search\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Card>\r\n              <Link to=\"/towerofhanoi\">\r\n                <CardActionArea>\r\n                  <img\r\n                    src=\"tower.png\"\r\n                    alt=\"Tower Of Hanoi\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      Tower Of Hanoi\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Card>\r\n              <Link to=\"game2048\">\r\n                <CardActionArea>\r\n                  <img\r\n                    src=\"2048.png\"\r\n                    alt=\"2048\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      2048\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Card>\r\n              <Link to=\"mergesort\">\r\n                <CardActionArea>\r\n                  <img\r\n                    src=\"mergesort.png\"\r\n                    alt=\"Merge Sort\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                    >\r\n                      Merge Sort\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Link>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Box, makeStyles, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    border: \"1px solid black\",\r\n    display: \"inline-block\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayArray({ arr, isColor }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      {arr.map((item, idx) => {\r\n        return (\r\n          <Paper\r\n            className={classes.box}\r\n            style={{\r\n              background: isColor[idx] === 1 ? \"lightgreen\" : \"\",\r\n            }}\r\n          >\r\n            {item}\r\n          </Paper>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","function generateArray(setArray) {\r\n  let arr = [];\r\n  while (arr.length < 15) {\r\n    const temp = Math.floor(Math.random() * 100) + 1;\r\n    if (arr.indexOf(temp) === -1) arr.push(temp);\r\n  }\r\n  setArray([...arr]);\r\n}\r\n\r\nexport default generateArray;\r\n","let processes = [];\r\n\r\nfunction merge(arr, left, right, mid) {\r\n  let i, j, k;\r\n  i = left;\r\n  j = mid + 1;\r\n  k = left;\r\n  let temp = Array(arr.length);\r\n  while (i <= mid && j <= right) {\r\n    if (arr[i] < arr[j]) {\r\n      temp[k++] = arr[i++];\r\n    } else {\r\n      temp[k++] = arr[j++];\r\n    }\r\n  }\r\n  while (i <= mid) {\r\n    temp[k++] = arr[i++];\r\n  }\r\n  while (j <= right) {\r\n    temp[k++] = arr[j++];\r\n  }\r\n  for (i = left; i <= right; i++) {\r\n    arr[i] = temp[i];\r\n  }\r\n  processes.push([...arr]);\r\n}\r\n\r\nfunction _mergeSort(arr, left, right) {\r\n  if (left < right) {\r\n    const mid = Math.floor((left + right) / 2);\r\n    _mergeSort(arr, left, mid);\r\n    _mergeSort(arr, mid + 1, right);\r\n    merge(arr, left, right, mid);\r\n  }\r\n}\r\n\r\nfunction mergeSort(arr) {\r\n  processes = [];\r\n  _mergeSort(arr, 0, arr.length - 1);\r\n  return processes;\r\n}\r\n\r\nexport default mergeSort;\r\n","async function visualize({ processes, setArray, setIsColor, setInProgress }) {\r\n  setInProgress(true);\r\n  for (const value of processes) {\r\n    const colors = Array(value.length);\r\n    setArray((prev) => {\r\n      for (let i = 0; i < prev.length; i++) {\r\n        if (prev[i] !== value[i]) {\r\n          colors[i] = 1;\r\n        } else {\r\n          colors[i] = 0;\r\n        }\r\n      }\r\n      return [...value];\r\n    });\r\n    setIsColor([...colors]);\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n  }\r\n  setIsColor([...Array(processes[0].length).fill(0)]);\r\n  setInProgress(false);\r\n}\r\n\r\nexport default visualize;\r\n","import { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DisplayArray from \"./DisplayArray\";\r\nimport generateArray from \"./functions/generateArray\";\r\nimport mergeSort from \"./functions/mergeSort\";\r\nimport visualize from \"./functions/visualize\";\r\n\r\nexport default function MergeSort() {\r\n  const [regenerate, setRegenerate] = useState(false);\r\n  const [array, setArray] = useState([]);\r\n  const [isColor, setIsColor] = useState([]);\r\n  const [inProgress, setInProgress] = useState(false);\r\n  useEffect(() => {\r\n    generateArray(setArray);\r\n  }, [regenerate]);\r\n  const handleVisualize = () => {\r\n    const processes = mergeSort([...array]);\r\n    visualize({ processes, setArray, setIsColor, setInProgress });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={5} align=\"center\">\r\n        <Container maxWidth=\"lg\">\r\n          <Typography variant=\"h4\">Merge Sort</Typography>\r\n          <Box p={2} />\r\n          <DisplayArray arr={array} isColor={isColor} />\r\n          <Box p={2} />\r\n          <Button\r\n            onClick={() => setRegenerate((prev) => !prev)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n            disabled={inProgress}\r\n          >\r\n            Regenerate\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ margin: \"10px\" }}\r\n            onClick={handleVisualize}\r\n            disabled={inProgress}\r\n          >\r\n            Visualize\r\n          </Button>\r\n          <Box />\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" style={{ margin: \"10px\" }}>\r\n              {`<= Home`}\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","let processes = [];\r\n\r\nfunction isSafe(row, col, num, sudokuValue) {\r\n  for (let i = 0; i < 9; i++) {\r\n    if (sudokuValue[row][i] === num || sudokuValue[i][col] === num) return false;\r\n  }\r\n  for (let i = 0; i < 3; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n      if (sudokuValue[i + (row - (row % 3))][j + (col - (col % 3))] === num) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction tryAllPossibility(row, col, sudokuValue) {\r\n  if (row === 9) return true;\r\n  if (col === 9) return tryAllPossibility(row + 1, 0, sudokuValue);\r\n  if (sudokuValue[row][col] !== 0)\r\n    return tryAllPossibility(row, col + 1, sudokuValue);\r\n  for (let i = 1; i <= 9; i++) {\r\n    if (isSafe(row, col, i, sudokuValue)) {\r\n      sudokuValue[row][col] = i;\r\n      processes.push([\r\n        ...sudokuValue.map(function (arr) {\r\n          return arr.slice();\r\n        }),\r\n      ]);\r\n      if (tryAllPossibility(row, col + 1, sudokuValue)) {\r\n        return true;\r\n      }\r\n      sudokuValue[row][col] = 0;\r\n      processes.push([\r\n        ...sudokuValue.map(function (arr) {\r\n          return arr.slice();\r\n        }),\r\n      ]);\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction solveSudoku(sudokuValue) {\r\n  processes = [];\r\n  tryAllPossibility(0, 0, sudokuValue);\r\n  return processes;\r\n}\r\n\r\nexport default solveSudoku;\r\n","async function visualize({\r\n  processes,\r\n  setSudokuValue,\r\n  setInProgress,\r\n  setProgressValue,\r\n}) {\r\n  setInProgress(true);\r\n  let counter = 1;\r\n  for (const value of processes) {\r\n    setSudokuValue([...value]);\r\n    await new Promise((resolve) => setTimeout(resolve, 1));\r\n    counter += 1;\r\n    setProgressValue((counter * 100) / processes.length);\r\n  }\r\n  setInProgress(false);\r\n}\r\n\r\nexport default visualize;\r\n","import { Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  paper: {\r\n    height: 150,\r\n    width: 150,\r\n    \"@media (max-width: 720px)\": {\r\n      height: 80,\r\n      width: 80,\r\n    },\r\n  },\r\n  paper2: {\r\n    height: 45,\r\n    width: 45,\r\n    border: \"1px solid rgba(0,0,0,0.5)\",\r\n    \"@media (max-width: 720px)\": {\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n  },\r\n  Display: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function SudokuBox({ sudokuValue }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={0}>\r\n        {[0, 1, 2].map((outerX) => (\r\n          <Grid item xs={12} key={outerX}>\r\n            <Grid container justify=\"center\" spacing={0}>\r\n              {[0, 1, 2].map((outerY) => (\r\n                <Grid key={outerY} item>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container spacing={0}>\r\n                      {[0, 1, 2].map((innerX) => (\r\n                        <Grid item xs={12} key={innerX}>\r\n                          <Grid container justify=\"center\" spacing={0}>\r\n                            {[0, 1, 2].map((innerY) => (\r\n                              <Grid key={innerY} item>\r\n                                <Paper className={classes.paper2} elevation={0}>\r\n                                  <Grid\r\n                                    container\r\n                                    spacing={0}\r\n                                    className={classes.Display}\r\n                                  >\r\n                                    {sudokuValue[outerX * 3 + innerX][\r\n                                      outerY * 3 + innerY\r\n                                    ] !== 0\r\n                                      ? sudokuValue[outerX * 3 + innerX][\r\n                                          outerY * 3 + innerY\r\n                                        ]\r\n                                      : \" \"}\r\n                                  </Grid>\r\n                                </Paper>\r\n                              </Grid>\r\n                            ))}\r\n                          </Grid>\r\n                        </Grid>\r\n                      ))}\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  LinearProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport solveSudoku from \"./functions/solveSudoku\";\r\nimport visualize from \"./functions/visualize\";\r\nimport SudokuBox from \"./SudokuBox\";\r\n\r\nexport default function Sudoku() {\r\n  const [sudokuValue, setSudokuValue] = useState(\r\n    new Array(9).fill(0).map(() => new Array(9).fill(0))\r\n  );\r\n\r\n  const [regenerate, setRegenerate] = useState(false);\r\n  const [inProgress, setInProgress] = useState(false);\r\n  const [progressValue, setProgressValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://sugoku.herokuapp.com/board?difficulty=easy\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setSudokuValue(data.board);\r\n      });\r\n  }, [regenerate]);\r\n\r\n  const handleVisualize = () => {\r\n    let processes = solveSudoku(sudokuValue);\r\n    visualize({\r\n      processes,\r\n      setSudokuValue,\r\n      setInProgress,\r\n      setProgressValue,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={5} align=\"center\">\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h4\">Sudoku Solution Visualizer</Typography>\r\n          <Box p={2} />\r\n          <LinearProgress variant=\"determinate\" value={progressValue} />\r\n          <Box p={2} />\r\n          <SudokuBox sudokuValue={sudokuValue} />\r\n          <Button\r\n            onClick={() => setRegenerate((prev) => !prev)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            style={{ margin: \"10px\" }}\r\n            disabled={inProgress}\r\n          >\r\n            Regenerate\r\n          </Button>\r\n          <Button\r\n            onClick={handleVisualize}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ margin: \"10px\" }}\r\n            disabled={inProgress}\r\n          >\r\n            Visualize\r\n          </Button>\r\n          <Box />\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" style={{ margin: \"10px\" }}>\r\n              {`<= Home`}\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","let last = [[], [], []];\r\nlet processes = [];\r\n\r\nfunction towerOfHanoi(n, from_rod, to_rod, aux_rod) {\r\n  if (n === 1) {\r\n    let temp = [\r\n      ...last.map(function (arr) {\r\n        return arr.slice();\r\n      }),\r\n    ];\r\n    temp[from_rod] = temp[from_rod].filter((i) => i !== n);\r\n    temp[to_rod] = [n, ...temp[to_rod]];\r\n    last = [\r\n      ...temp.map(function (arr) {\r\n        return arr.slice();\r\n      }),\r\n    ];\r\n    processes.push(last);\r\n    return;\r\n  }\r\n  towerOfHanoi(n - 1, from_rod, aux_rod, to_rod);\r\n  let temp = [\r\n    ...last.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n  temp[from_rod] = temp[from_rod].filter((i) => i !== n);\r\n  temp[to_rod] = [n, ...temp[to_rod]];\r\n  last = [\r\n    ...temp.map(function (arr) {\r\n      return arr.slice();\r\n    }),\r\n  ];\r\n  processes.push(last);\r\n  towerOfHanoi(n - 1, aux_rod, to_rod, from_rod);\r\n}\r\n\r\nfunction solveTower(n) {\r\n  last = [[...Array.from({ length: n }, (_, i) => i + 1)], [], []];\r\n  processes = [];\r\n  towerOfHanoi(n, 0, 2, 1);\r\n  return processes;\r\n}\r\n\r\nexport default solveTower;\r\n","async function visualize({ processes, setDiskState, setInProgress }) {\r\n  setInProgress(true);\r\n  for (const value of processes) {\r\n    setDiskState([...value]);\r\n    await new Promise((resolve) => setTimeout(resolve, 600));\r\n  }\r\n  setInProgress(false);\r\n}\r\n\r\nexport default visualize;\r\n","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    position: \"relative\",\r\n    height: \"100px\",\r\n    border: \"2px solid red\",\r\n  },\r\n  rod: {\r\n    width: \"10px\",\r\n    height: \"100%\",\r\n    background: \"rgb(0,0,84)\",\r\n    position: \"absolute\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  disk: {\r\n    height: \"10px\",\r\n    width: \"80%\",\r\n    background: \"yellow\",\r\n    position: \"absolute\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n}));\r\n\r\nexport default function TowerBoard({ noOfDisk, diskState }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        {diskState.map((rod) => (\r\n          <Grid item xs={4} className={classes.box}>\r\n            <div className={classes.rod} />\r\n            {rod.map((disk, idx) => {\r\n              return (\r\n                <div\r\n                  className={classes.disk}\r\n                  style={{\r\n                    width: `${80 + (disk - noOfDisk) * 10}%`,\r\n                    bottom: (rod.length - idx - 1) * 20,\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  LinearProgress,\r\n  Typography,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport solveTower from \"./functions/solveTower\";\r\nimport visualize from \"./functions/visualize\";\r\nimport TowerBoard from \"./TowerBoard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function TowerOfHanoi() {\r\n  const classes = useStyles();\r\n  const [diskState, setDiskState] = useState([[1, 2, 3], [], []]);\r\n  const [inProgress, setInProgress] = useState(false);\r\n  const [noOfDisk, setNoOfDisk] = React.useState(3);\r\n\r\n  const handleChange = (event) => {\r\n    setNoOfDisk(event.target.value);\r\n    setDiskState([\r\n      [...Array.from({ length: event.target.value }, (_, i) => i + 1)],\r\n      [],\r\n      [],\r\n    ]);\r\n  };\r\n\r\n  const handleVisualize = () => {\r\n    let processes = solveTower(noOfDisk);\r\n    visualize({ processes, setInProgress, setDiskState });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box p={5} align=\"center\">\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h4\">Tower Of Hanoi</Typography>\r\n          <Box p={2} />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">No Of Disk</InputLabel>\r\n            <Select\r\n              disabled={inProgress}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={noOfDisk}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value={3}>3</MenuItem>\r\n              <MenuItem value={4}>4</MenuItem>\r\n              <MenuItem value={5}>5</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Box p={2} />\r\n          <TowerBoard diskState={diskState} noOfDisk={noOfDisk} />\r\n          <Box p={2} />\r\n          <Button\r\n            onClick={handleVisualize}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ margin: \"10px\" }}\r\n            disabled={inProgress}\r\n          >\r\n            Visualize\r\n          </Button>\r\n          <Box p={2} />\r\n          <Link to=\"/\">\r\n            <Button color=\"primary\" style={{ margin: \"10px\" }}>\r\n              {`<= Home`}\r\n            </Button>\r\n          </Link>\r\n        </Container>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { Suspense } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Game2048 from \"./2048\";\r\nimport BinarySearch from \"./binarySearch\";\r\nimport Home from \"./home\";\r\nimport MergeSort from \"./mergesort\";\r\nimport Sudoku from \"./sudoku\";\r\nimport TowerOfHanoi from \"./towerOfHanoi\";\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Suspense\r\n          fallback={\r\n            <CircularProgress\r\n              color=\"secondary\"\r\n              style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\r\n            />\r\n          }\r\n        >\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/sudoku\">\r\n              <Sudoku />\r\n            </Route>\r\n            <Route path=\"/game2048\">\r\n              <Game2048 />\r\n            </Route>\r\n            <Route path=\"/towerofhanoi\">\r\n              <TowerOfHanoi />\r\n            </Route>\r\n            <Route path=\"/binarySearch\">\r\n              <BinarySearch />\r\n            </Route>\r\n            <Route path=\"/mergesort\">\r\n              <MergeSort />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}